# Timezone offset in hours to apply to get to TAI 
# (i.e. Greenwich time)
 to_tai 7  # Mountain Standard Time 

# Degrees twilight to use
dark_twilight -15.
bright_twilight -8.

# Whether events start ("on") or stop ("off") observing
START_SURVEY on
END_SURVEY off
START_SHUTDOWN off
END_SHUTDOWN on
START_ENGINEERING off
END_ENGINEERING on

typedef enum {
  START_SURVEY,
  END_SURVEY,
  START_SHUTDOWN,
  END_SHUTDOWN,
  START_ENGINEERING,
  END_ENGINEERING
} EVENT;

typedef struct {
  char date[10];
  char time[5];
  EVENT event;
} SCHEDULE;

SCHEDULE 2021-10-21 12:00 START_SURVEY
SCHEDULE 2021-11-18 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2021-11-19 12:00 END_ENGINEERING
SCHEDULE 2021-12-18 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2021-12-19 12:00 END_ENGINEERING
SCHEDULE 2022-01-18 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2022-01-19 12:00 END_ENGINEERING
SCHEDULE 2022-02-16 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2022-02-17 12:00 END_ENGINEERING
SCHEDULE 2022-03-18 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2022-03-19 12:00 END_ENGINEERING
SCHEDULE 2022-04-16 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2022-04-17 12:00 END_ENGINEERING
SCHEDULE 2022-05-14 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2022-05-15 12:00 END_ENGINEERING
SCHEDULE 2022-06-14 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2022-06-15 12:00 END_ENGINEERING
SCHEDULE 2022-07-04 12:00 START_SHUTDOWN # SUMMER SHUTDOWN
SCHEDULE 2022-08-15 12:00 END_SHUTDOWN
SCHEDULE 2022-09-10 12:00 START_ENGINEERING # Engineering time
SCHEDULE 2022-09-11 12:00 END_ENGINEERING
SCHEDULE 2022-10-21 12:00 END_SURVEY

